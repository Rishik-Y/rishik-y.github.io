name: Fast GitHub Pages Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better caching

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true # This caches gems automatically

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v4

    - name: Cache Jekyll dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.bundle
          vendor/bundle
          _site
          .jekyll-cache
        key: ${{ runner.os }}-jekyll-${{ hashFiles('**/Gemfile.lock', '**/_config.yml') }}
        restore-keys: |
          ${{ runner.os }}-jekyll-

    - name: Create Gemfile if not exists
      run: |
        if [ ! -f Gemfile ]; then
          cat > Gemfile << EOF
        source 'https://rubygems.org'
        gem 'github-pages', group: :jekyll_plugins
        gem 'jekyll-sitemap'
        gem 'jekyll-feed'
        EOF
        fi

    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Build with Jekyll
      run: |
        bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
      env:
        JEKYLL_ENV: production

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./_site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4